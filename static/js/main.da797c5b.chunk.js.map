{"version":3,"sources":["logo.svg","components/Fullpage.js","components/DownIcon.js","sections/TitlesAndIcons.js","sections/AboutSections.js","sections/SkillSections.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Fullpage","children","this","props","className","Component","DownIcon","src","icon","alt","TitlesAndIcons","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSections","sections","items","content","SkillSections","skill","image","NavBar","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da797c5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React ,{Component} from \"react\"\r\nimport \"./Fullpage.css\"\r\nclass   Fullpage extends  Component  {\r\n    render() {\r\n        const{children}=this.props\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Fullpage;\r\n","import React , {Component} from 'react';\r\nimport \"./DownIcon.css\"\r\nconst DownIcon = (props) =>{\r\n    return(\r\n        <div className=\"bigdown\">\r\n    \r\n        <img  className=\"down\" src={props.icon} alt=\"down\"/>\r\n          \r\n  </div>\r\n  \r\n    )\r\n\r\n}\r\nexport default DownIcon","import React ,{Component} from \"react\"\r\nimport Fullpage from \"../components/Fullpage\"\r\nimport data from \"../data.json\"\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./TitlesAndIcons.css\"\r\nimport DownIcon from \"../components/DownIcon\"\r\nimport { Link, Element  } from 'react-scroll'\r\n\r\nclass   TitlesAndIcons extends  Component  {\r\n\r\n  \r\n    \r\n  \r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div><Fullpage className=\"one\" >\r\n             \r\n  \r\n<h1 className=\"title\"  >\r\n{data.title}\r\n</h1>\r\n<div >\r\n  <h2>\r\n    {data.subtitle }\r\n  </h2>\r\n</div>\r\n<div className=\"icon-wrapper\">{\r\n  Object.keys(data.links).map(key => \r\n    {\r\n      return(<SocialIcon url={data.links[key]} />\r\n\r\n      )\r\n    }\r\n    \r\n    )\r\n}\r\n</div>\r\n\r\n  </Fullpage>\r\n  <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n          \r\n        \r\n  <DownIcon \r\n   icon={data.icons.down}\r\n  /></Link>\r\n    <Element name=\"About\" className=\"element\">\r\n        \r\n        </Element>\r\n  </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\nexport default TitlesAndIcons;\r\n","import React ,{Component} from \"react\"\r\nimport Fullpage from \"../components/Fullpage\"\r\nimport data from \"../data.json\"\r\nimport \"./AboutSections.css\"\r\nimport \"./TitlesAndIcons.css\"\r\nimport DownIcon from \"../components/DownIcon\"\r\nimport { Link, Element  } from 'react-scroll'\r\n\r\n\r\nclass   AboutSections extends  Component  {\r\n    render() {\r\n        return (<div>       <Fullpage className=\"two\">\r\n        <h2>{data.sections[0].title}</h2> \r\n        \r\n          <h3>{data.sections[0].items[0].content}<br/><br/></h3>\r\n          <h3>{data.sections[0].items[1].content}<br/><br/></h3>\r\n          <h3>{data.sections[0].items[2].content}<br/><br/></h3>\r\n          <h3>{data.sections[0].items[3].content}<br/><br/></h3>\r\n         </Fullpage>\r\n         <div>\r\n        \r\n             <Link activeClass=\"active\" to=\"Skill\" spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n                 \r\n               \r\n                 <DownIcon \r\n                  icon={data.icons.down}\r\n                 /></Link>\r\n                    <Element name=\"Skill\" className=\"element\">\r\n                       \r\n                       </Element>\r\n         </div></div>\r\n     \r\n        )\r\n        \r\n    }\r\n    \r\n}\r\n\r\n        \r\nexport default AboutSections;\r\n","import React ,{Component} from \"react\"\r\nimport Fullpage from \"../components/Fullpage\"\r\nimport data from \"../data.json\"\r\nimport \"./Skillsections.css\"\r\n\r\nclass   SkillSections extends  Component  {\r\n    render() {\r\n        return (\r\n            <Fullpage className=\"three\">\r\n    <div >\r\n<div className=\"h3\"><h3>{data.sections[1].title}</h3></div>\r\n<div className=\"card-wrapper\">\r\n{\r\n  data.sections[1].items.map(\r\n    skill =>{\r\n      return(<div className=\"card\">\r\n      <div className=\"image-card\">\r\n<img className=\"img1\" src={skill.content.image}/> </div>\r\n\r\n<div className=\"title-card\">\r\n       <h4>{skill.content.title}</h4> \r\n      </div>\r\n      </div>\r\n       \r\n       \r\n      )\r\n    })\r\n}\r\n   \r\n</div>\r\n\r\n  </div>     \r\n      \r\n  \r\n  \r\n\r\n\r\n  </Fullpage>\r\n        )\r\n    }\r\n}\r\nexport default  SkillSections;\r\n","import React ,{Component} from \"react\"\r\nimport \"./NavBar.css\"\r\nimport { Link, Element  } from 'react-scroll'\r\n\r\n\r\n\r\nclass NavBar extends Component{\r\n    \r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n<button   className=\"changetheme\">Theme </button>\r\n\r\n<Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n\r\n\r\n<a className=\"a1\" href=\"\">About</a> </Link>\r\n<Element name=\"About\" className=\"element\">\r\n</Element>\r\n\r\n\r\n<Link activeClass=\"active\" to=\"Skill\"\r\n spy={true} smooth={true} offset={50} duration={500} delay={0}>\r\n\r\n\r\n<a className=\"a2\" href=\"\">Skill</a></Link>\r\n\r\n\r\n<Element name=\"Skill\" className=\"element\">\r\n</Element></div> \r\n        \r\n        )\r\n    }\r\n}\r\nexport default NavBar","import React ,{Component} from 'react';\nimport TitlesAndIcons from \"./sections/TitlesAndIcons\"\nimport AboutSections from \"./sections/AboutSections\"\nimport SkillSections from \"./sections/SkillSections\"\nimport data from \"./data.json\"\nimport { SocialIcon } from \"react-social-icons\"\nimport Fullpage from \"./components/Fullpage\"\nimport NavBar from \"./components/NavBar\"\nimport SnowStorm from 'react-snowstorm';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { SIGKILL } from 'constants';\nimport { dirname } from 'path';\nimport { Link, Element } from \"react-scroll\";\n\nclass App extends Component {\n  \n  render(){\n  return (\n    <div className=\"App\">\n\n<div>\n\t\t\t\t<SnowStorm />\n\t\t\t</div>\n\n\n<NavBar/>\n<TitlesAndIcons />\n<AboutSections/>\n<SkillSections/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}